/* Setup */

html {
  /* Default text styling */
  font-family: 'Roboto', sans-serif;
  font-weight: 100;
  font-size: 20px;
  /* Dark grey and the answer to the ultimate question */
  color: #424242;
  /* Modern light grey background */
  background-color: #f9f9f9;
}

.fas {
  font-family: 'Roboto', sans-serif;
  font-size: 20px;
  font-weight: 100;
}

.fa-check {
  margin-right: 1em;
}

.fa-times {
  color: #C0C0C0;
  margin-left: 1em;
}

/* Navbar */

.navbar {
  display: grid;
  grid-template-areas:
    "a b";
}

.logo {
  grid-area: a;
  font-family: 'Roboto', sans-serif;
  font-weight: 100;
  font-size: 32px;
  user-select: none;
}

.links {
  grid-area: b;
  user-select: none;
  display: flex;
  justify-content: flex-end;
}

/* Main Page */

#app-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100%;
  flex-direction: column;
}

.goal {
  cursor: pointer;
  font-size: 32px;
  font-weight: 300;
  user-select: none;
}

.complete {
  text-decoration: line-through;
}

#goals-container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Input Bar */

#goals-container {
  margin-bottom: 60px;
}

#input-container {
  margin-bottom: 200px;
}

.input-bar {
  border: none;
	outline: none;
  background-color: #f9f9f9;
  border-bottom: 1px solid #424242;
  text-align: center;
  
	width: 450px;
	height: 50px;
	font-size: 32px;
	font-family: 'Roboto', sans-serif;
  font-weight: 300;
}

.input-bar:focus {
 outline: none;
}

.input-bar::placeholder {
	color: black;
	opacity: 0.5;
}

.input-bar:hover::-webkit-input-placeholder {
	opacity: 0.75;
	transition: opacity 0.5s ease-in-out;
}

.input-bar:focus::-webkit-input-placeholder {
	transition: opacity 0.5s ease-in-out;
	opacity: 0;
}

/* Buttons */

.modern-button {
  cursor: pointer;
  
  /* Button size */
  height: 80px;
  padding: 0 40px;
  
  /* Button font */
  font-weight: 300;
  font-size: 24px;
  letter-spacing: .4px;
  color: #424242;
  
  /* Remove blue selection outline */
  outline: none;
  /* Remove border */
  border: none;
  /* Make button see-through */
  background-color: transparent;
  /* Transition hover effects into view */
  transition: all .3s ease-out;
}

/* Normal state */
.ripple {
  background-position: center;
  transition: background 0.8s;
}
/* Hover state */
.ripple:hover {
  /* After active, the tiny transparent circle at the center of the gradient expands
  along with the entire background, revealing the temporary background color/ripple color 
  set in active underneath it. The temporary background color transitions to the hover background 
  color, and the inside of the transparent circle transitions first, creating a ripple. */
  background: #e7e7e7 radial-gradient(circle, transparent 1%, #e7e7e7 1%) center/15000%;
}
/* Active state: the initial state of the ripple */
.ripple:active {
  /* Immediately transition the background */
  transition: background 0s;
  /* Start with a background gradient size of 100%, with 99% of the gradient being the hover color */
  background-size: 100%;
  /* Start with the ripple color, in the form of a temp background color, underneath the gradient */
  background-color: #f9f9f9;  
}
